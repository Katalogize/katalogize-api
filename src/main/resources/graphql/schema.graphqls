type Query {
    getAllCatalogs: [Catalog]
    getCatalogById(id: ID): Catalog
    getAllCatalogsByUserId(id: ID): [Catalog]

    getAllCatalogItems: [CatalogItem]
    getCatalogItemById(id: ID): Catalog
    getAllCatalogItemsByCatalogId(id: ID): [CatalogItem]

    getAllUsers: [User]
    getUserById(id: ID): User
}

type Catalog {
    id: ID
    name: String
    description: String
    user: User
    items: [CatalogItem]
}

type CatalogItem {
    id: ID
    catalogId: ID
    fields: [ItemField]
}

union ItemField = ItemFieldInt | ItemFieldString

type ItemFieldInt {
    name: String!
    value: Int
}

type ItemFieldString {
    name: String!
    value: String
}

type User {
    id: ID
    firstName: String
    lastName: String
    email: String
}